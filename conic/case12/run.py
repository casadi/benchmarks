from casadi import *

# Very simple LICQ-induced cycling example

alpha = 6.81
gamma = 0.0464
beta = 0.5*gamma

args = {'a': blockcat([[0,0,0,0,1,0,0],[0,-alpha,0,alpha,0,beta,-beta],[0,0,-alpha,0,alpha,gamma,-gamma],[0,-5,5,0,0,0,0],[0,0,0,-5,5,0,0],[0,0,0,0,0,-1,1]]),
        'g': DM([0, 0, 0, 0, 0, 0.005, 0.005]), 'lam_a0': DM([0.538272, 0, 0, 0.0941371, 0.0789183, -1.12443e-05]),
        'lba': DM([-0.4, -0.1, -0.1, -1, -1, 0]),
        'uba': DM([0, 0.1, 0.1, 0, 0, 0]),
        'h': DM(
[[0.326914, 00, 00, -0.141027, 0.0775244, 00, 0.0103896], 
 [00, 0.294538, 0.153496, 00, 00, 0.0122464, 00], 
 [00, 0.153496, 0.246489, 00, 00, 0.0140279, 00], 
 [-0.141027, 00, 00, 0.276741, 0.141967, 00, 0.0113965], 
 [0.0775244, 00, 00, 0.141967, 0.225254, 00, 0.0132593], 
 [00, 0.0122464, 0.0140279, 00, 00, 0.031994, 00], 
 [0.0103896, 00, 00, 0.0113965, 0.0132593, 00, 0.0295766]])}


solver = conic("conic","qrqp",{'a':args["a"].sparsity(), 'h': args["h"].sparsity()})
res =solver(**args)
